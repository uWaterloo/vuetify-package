function int(value) {
    return parseInt(value, 10);
}
/**
 * https://en.wikipedia.org/wiki/Collinearity
 * x=(x1+x2)/2
 * y=(y1+y2)/2
 */
export function checkCollinear(p0, p1, p2) {
    return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y);
}
export function getDistance(p1, p2) {
    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
}
export function moveTo(to, from, radius) {
    const vector = { x: to.x - from.x, y: to.y - from.y };
    const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));
    const unitVector = { x: vector.x / length, y: vector.y / length };
    return {
        x: from.x + unitVector.x * radius,
        y: from.y + unitVector.y * radius,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaGVscGVycy9tYXRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsR0FBRyxDQUFFLEtBQXNCO0lBQ2xDLE9BQU8sUUFBUSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQTtBQUM1QixDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQUUsRUFBUyxFQUFFLEVBQVMsRUFBRSxFQUFTO0lBQzdELE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNqRixDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBRSxFQUFTLEVBQUUsRUFBUztJQUMvQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQ3BELENBQUE7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLE1BQU0sQ0FBRSxFQUFTLEVBQUUsSUFBVyxFQUFFLE1BQWM7SUFDNUQsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQTtJQUNyRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3ZFLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFBO0lBRWpFLE9BQU87UUFDTCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxHQUFHLE1BQU07UUFDakMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsR0FBRyxNQUFNO0tBQ2xDLENBQUE7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi9WU3BhcmtsaW5lJ1xuXG5mdW5jdGlvbiBpbnQgKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKVxufVxuXG4vKipcbiAqIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0NvbGxpbmVhcml0eVxuICogeD0oeDEreDIpLzJcbiAqIHk9KHkxK3kyKS8yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0NvbGxpbmVhciAocDA6IFBvaW50LCBwMTogUG9pbnQsIHAyOiBQb2ludCk6IGJvb2xlYW4ge1xuICByZXR1cm4gaW50KHAwLnggKyBwMi54KSA9PT0gaW50KDIgKiBwMS54KSAmJiBpbnQocDAueSArIHAyLnkpID09PSBpbnQoMiAqIHAxLnkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXN0YW5jZSAocDE6IFBvaW50LCBwMjogUG9pbnQpOiBudW1iZXIge1xuICByZXR1cm4gTWF0aC5zcXJ0KFxuICAgIE1hdGgucG93KHAyLnggLSBwMS54LCAyKSArIE1hdGgucG93KHAyLnkgLSBwMS55LCAyKVxuICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlVG8gKHRvOiBQb2ludCwgZnJvbTogUG9pbnQsIHJhZGl1czogbnVtYmVyKSB7XG4gIGNvbnN0IHZlY3RvciA9IHsgeDogdG8ueCAtIGZyb20ueCwgeTogdG8ueSAtIGZyb20ueSB9XG4gIGNvbnN0IGxlbmd0aCA9IE1hdGguc3FydCgodmVjdG9yLnggKiB2ZWN0b3IueCkgKyAodmVjdG9yLnkgKiB2ZWN0b3IueSkpXG4gIGNvbnN0IHVuaXRWZWN0b3IgPSB7IHg6IHZlY3Rvci54IC8gbGVuZ3RoLCB5OiB2ZWN0b3IueSAvIGxlbmd0aCB9XG5cbiAgcmV0dXJuIHtcbiAgICB4OiBmcm9tLnggKyB1bml0VmVjdG9yLnggKiByYWRpdXMsXG4gICAgeTogZnJvbS55ICsgdW5pdFZlY3Rvci55ICogcmFkaXVzLFxuICB9XG59XG4iXX0=